{"version":3,"file":"static/js/297.273b9e85.chunk.js","mappings":"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","sources":["Api/fetchMovies.js","components/HomeTrendingList/HomeTrendingList.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["export function fetchMovies(url) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDhlY2Y3NDVmNWJiZTUwZmM2NDhjMDg1OWZhMTcwMSIsInN1YiI6IjY0ODhjMTU2ZDJiMjA5MDBjYTIxNzA5NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4vxGV4kBszJbv90PYcnQ1DUyBmnKxmAR_P1khjcXgUk',\n    },\n  };\n  return fetch(url, options).then(res => res.json());\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const HomeItem = styled(NavLink)`\n  color: #e6e6e6;\n  margin: 0;\n  text-decoration: none;\n`;\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  column-gap: 16px;\n  row-gap: 32px;\n  list-style: none;\n  flex-bacis: 24%;\n`;\n\nexport const TrendingLi = styled.li`\n  max-width: 200px;\n`;\n\nexport const TrendingImg = styled.img`\n  border-radius: 5px;\n  background: var(\n    --linear,\n    linear-gradient(180deg, rgba(0, 0, 0, 0) 63.48%, rgba(0, 0, 0, 0.9) 92.16%)\n  );\n`;\n\nexport const TrendingName = styled.p`\n  color: #e6e6e6;\n  font-size: 16px;\n  font-weight: 600;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\nexport const NoMovies = styled.div`\n  color: white;\n  margin: 0;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  color: #ffc0cb;\n`;\n","import React from 'react';\nimport { Puff } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nconst Loader = () => (\n  <LoaderContainer>\n    <Puff color=\"#FFC0CB\" height={100} width={100} />\n  </LoaderContainer>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const SearchbarHeader = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding: 12 24px;\n  z-index: 10;\n  margin: 0 auto;\n  background-color: #0a0909;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: black;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid pink;\n  border-radius: 10px;\n  button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-color: black;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n  button:hover {\n    opacity: 1;\n  }\n  span {\n    font-size: 30px;\n  }\n  button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n  input {\n    background-color: black;\n    margin-right: auto;\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 20px;\n    padding-right: 4px;\n    color: white;\n  }\n  input::placeholder {\n    color: white;\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { SearchbarHeader, SearchForm } from './Searchbar.styled';\n\nexport function Searchbar({ setSearchParams }) {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleQueryChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <SearchbarHeader>\n      <SearchForm onSubmit={handleSubmit} className=\"form\">\n        <button type=\"submit\" className=\"button\">\n          <span className=\"button-label\">&#128269;</span>\n        </button>\n\n        <input\n          onChange={handleQueryChange}\n          value={query}\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search Movies\"\n        />\n      </SearchForm>\n    </SearchbarHeader>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovies } from 'Api/fetchMovies';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport {\n  NoMovies,\n  HomeItem,\n  TrendingImg,\n  TrendingLi,\n  TrendingList,\n  TrendingName,\n} from 'components/HomeTrendingList/HomeTrendingList.styled';\n\nfunction MovieSearchItem({ movie, location }) {\n  const [loading, setLoading] = useState(true);\n\n  const handleImageLoad = () => {\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (!movie.poster_path) {\n      setLoading(false);\n    }\n  }, [movie]);\n\n  return (\n    <TrendingLi key={movie.id}>\n      <HomeItem to={`${movie.id}`} state={{ from: location }}>\n        {loading && <Loader />}\n        {movie.poster_path ? (\n          <TrendingImg\n            width=\"200px\"\n            src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n            alt={movie.title}\n            onLoad={handleImageLoad}\n            style={{ display: loading ? 'none' : 'block' }}\n          />\n        ) : (\n          <TrendingImg\n            width=\"200px\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg\"\n            alt={movie.title}\n          />\n        )}\n        <TrendingName>{movie.original_title}</TrendingName>\n        <p>User Scrore: {Math.round(movie.vote_average * 10)}%</p>\n      </HomeItem>\n    </TrendingLi>\n  );\n}\n\nfunction Movies() {\n  const [movies, setMovies] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchPerformed, setSearchPerformed] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query') ?? '';\n    if (searchQuery !== '') {\n      setSearchPerformed(true);\n      const url = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=1`;\n      fetchMovies(url)\n        .then(results => {\n          setMovies(results);\n        })\n        .catch(err => console.error('error:' + err));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <Searchbar setSearchParams={setSearchParams} />\n      {movies && movies.results.length > 0 ? (\n        <TrendingList>\n          {movies.results.map(result => {\n            return (\n              <MovieSearchItem\n                key={result.id}\n                movie={result}\n                location={location}\n              />\n            );\n          })}\n        </TrendingList>\n      ) : (\n        searchPerformed && <NoMovies>No movies found</NoMovies>\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["fetchMovies","url","fetch","method","headers","accept","Authorization","then","res","json","HomeItem","styled","NavLink","_templateObject","_taggedTemplateLiteral","TrendingList","_templateObject2","TrendingLi","_templateObject3","TrendingImg","_templateObject4","TrendingName","_templateObject5","NoMovies","_templateObject6","LoaderContainer","_jsx","children","Puff","color","height","width","SearchbarHeader","SearchForm","Searchbar","_ref","setSearchParams","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","e","preventDefault","className","type","onChange","_ref2","value","target","autoComplete","autoFocus","placeholder","MovieSearchItem","movie","location","loading","setLoading","useEffect","poster_path","to","concat","id","state","from","Loader","src","alt","title","onLoad","style","display","original_title","Math","round","vote_average","_useState3","_useState4","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","_useState5","_useState6","searchPerformed","setSearchPerformed","useLocation","_searchParams$get","searchQuery","get","results","catch","err","console","error","_Fragment","length","map","result"],"sourceRoot":""}